name : HCM-Build-Scratch-Org

on:
  push :
    branches:
      - main
  workflow_dispatch:
    inputs:
      buildBetaPackage:
        description: "Build a BETA package"
        type: boolean
        default: true
        required: false  
      branchName:
        description: "Branch name"
        required: false
        default: "main"             

jobs:
  Create_Package:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:          

      - name: Install Salesforce SFDX
        run: |
          npm install -g sfdx-cli
          
      - name: "Authorise Packaging org"
        run: |
          echo "${{ secrets.RICO_PACKAGING_ORG_SERVER_KEY }}" > "server.key"
          sfdx force:auth:jwt:grant --clientid=${{ secrets.RICO_PACKAGING_ORG_CONSUMER_KEY }} --username=${{ secrets.RICO_PACKAGING_ORG_USERNAME }} --jwtkeyfile ./server.key
          sfdx force:config:set -g defaultusername=${{ secrets.RICO_PACKAGING_ORG_USERNAME }}

      - uses: actions/checkout@v3
        name: Checkout Project
        with:
          ref: ${{ inputs.branchName }}
          token: ${{ secrets.RICO_PACKAGING_ORG_GITHUB_TOKEN }}
        
      - name: "Deploy Packaging org"
        run: |
          sfdx force:source:convert --sourcepath=force-app --outputdir package
          sfdx force:mdapi:deploy --deploydir package --targetusername ${{ secrets.RICO_PACKAGING_ORG_USERNAME }} --wait 10
      
      - name: "Get data to build the package"
        run: |
          sfdx package1:version:list --json > packages
          jq .packages.result[] | last > lastPackage
          echo "metadataPackageId=lastPackage.MetadataPackageId" >> $GITHUB_ENV
          echo "version=lastPackage.version" >> $GITHUB_ENV
          echo "lastPackage is $(lastPackage)"

      - name: "Get data to build the package"
        run: |
          echo "metadataPackageId is $(metadataPackageId)"
          echo "version is $(version)"
          


      # - name: create tags
      #   run: |
      #     git tag -a ${{version + 1}} -m ${{version + 1}} && git push origin --tags
      #     sfdx force:package1:version:create --packageid ${metadataPackageId} --name ${v} --version ${nextVersion} ${buildBetaPackage ? '' : ' --managedreleased'}`;


# there is not possibility to include the post install script, is added by default?
